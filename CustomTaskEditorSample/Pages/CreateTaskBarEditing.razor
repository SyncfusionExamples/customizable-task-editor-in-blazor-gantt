@page "/CSS-Taskbar"

<style>

    .e-gantt .e-gantt-parent-taskbar.e-gantt-parent-taskbar-inner-div {
        border-radius: 14px;
        background-color: forestgreen;
        border-color: forestgreen
    }

    .e-gantt .e-gantt-parent-taskbar .e-gantt-parent-progressbar-inner-div {
        border-top-right-radius: 14px !important;
        border-bottom-right-radius: 14px !important;
    }

    .e-gantt .e-gantt-child-taskbar.e-gantt-child-taskbar-inner-div {
        border-radius: 14px;
        background-color: mediumpurple;
        border-color: mediumpurple
    }

    .e-gantt .e-gantt-child-taskbar .e-gantt-child-progressbar-inner-div {
        border-top-right-radius: 14px !important;
        border-bottom-right-radius: 14px !important;
        background-color: purple;
    }

    .e-gantt .criticaltask .e-gantt-child-taskbar.e-gantt-child-taskbar-inner-div {
        background-color: crimson
    }

    .e-gantt .e-gantt-chart .e-milestone-top, .e-gantt .e-gantt-chart .e-milestone-bottom {
        border-bottom-color: forestgreen;
        border-top-color: forestgreen;
    }

    .e-gantt .e-gantt-chart .e-line {
        border-color: yellow;
    }

    .e-gantt .e-gantt-chart .e-connector-line-right-arrow, .e-gantt .e-gantt-chart .e-connector-line-left-arrow {
        border-left-color: yellow;
    }

</style>

<SfGantt DataSource="@TaskCollection" ProjectStartDate="new DateTime(2022,4,1)" ID="GanttChart" Width="1200px" Height="450px" @ref="Gantt" HighlightWeekends="true" TreeColumnIndex=1 RowHeight="40" GridLines="Syncfusion.Blazor.Gantt.GridLine.None">
    <GanttTaskFields Id="TaskId" Name="TaskName" StartDate="StartDate" EndDate="EndDate" Progress="Progress" Duration="Duration" Milestone="IsMilestone" ParentID="ParentId" Dependency="Predecessor"></GanttTaskFields>
    <GanttColumns>
        <GanttColumn Field="TaskId"></GanttColumn>
        <GanttColumn Field="TaskName" Width=300></GanttColumn>
        <GanttColumn Field="StartDate"></GanttColumn>
        <GanttColumn Field="Duration"></GanttColumn>
        <GanttColumn Field="Predecessor" HeaderText="Predecessor"></GanttColumn>
        <GanttColumn Field="Done" HeaderText="Done"></GanttColumn>
        <GanttColumn Field="IsMilestone"></GanttColumn>
    </GanttColumns>
    <GanttTimelineSettings TimelineUnitSize=100>
        <GanttTopTierSettings Unit="TimelineViewMode.Month" Format="MMM"></GanttTopTierSettings>
        <GanttBottomTierSettings Unit="TimelineViewMode.Week">
        </GanttBottomTierSettings>
    </GanttTimelineSettings>
    <GanttEditSettings AllowEditing="true" AllowAdding="true" AllowDeleting="true" AllowTaskbarEditing="true"></GanttEditSettings>
    <GanttSplitterSettings Position="280px"></GanttSplitterSettings>
    <GanttEvents QueryChartRowInfo="QueryChartRowInfoHandler" TValue="TaskData"></GanttEvents>
</SfGantt>

@code {
    public SfGantt<TaskData> Gantt;
    public List<TaskData> TaskCollection { get; set; }

    protected override void OnInitialized()
    {
        this.TaskCollection = GetTaskCollection();
    }

    public void QueryChartRowInfoHandler(Syncfusion.Blazor.Gantt.QueryChartRowInfoEventArgs<TaskData> args)
    {
        if (args.Data.TaskId == 6)
        {
            String[] s1 = new String[1] { "criticaltask" };
            args.Row.AddClass(s1);

        }
    }


    public class TaskData
    {
        public int TaskId { get; set; }
        public string TaskName { get; set; }
        public DateTime StartDate { get; set; }
        public DateTime EndDate { get; set; }
        public string Duration { get; set; }
        public int Progress { get; set; }
        public string Predecessor { get; set; }
        public int? ParentId { get; set; }
        public bool IsExpanded { get; set; }
        public string Done { get; set; }
        public bool IsMilestone { get; set; }
    }

    public static List<TaskData> GetTaskCollection()
    {
        List<TaskData> Tasks = new List<TaskData>() {

    new TaskData() {
        TaskId = 1,
        TaskName = "Project initiation",
        StartDate = new DateTime(2022, 04, 02),
        EndDate = new DateTime(2022, 04, 21),
        IsExpanded = false,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 2,
        TaskName = "Identify Site location",
        StartDate = new DateTime(2022, 04, 02),
        Duration = "10",
        Progress = 30,
        ParentId = 1,
        IsExpanded = true,
        Done = "No"
    },
    new TaskData() {
        TaskId = 3,
        TaskName = "Perform soil test",
        StartDate = new DateTime(2022, 04, 02),
        Duration = "4",
        Progress = 40,
        ParentId = 1,
        Predecessor = "2",
        IsExpanded = true,
        Done = "No",
        IsMilestone = true
    },
    new TaskData() {
        TaskId = 4,
        TaskName = "Soil test approval",
        StartDate = new DateTime(2022, 04, 02),
        Duration = "3",
        Progress = 30,
        ParentId = 1,
        Predecessor = "3",
        IsExpanded = true,
        Done = "No"
    },
    new TaskData() {
        TaskId = 5,
        TaskName = "Project estimation",
        StartDate = new DateTime(2022, 04, 02),
        EndDate = new DateTime(2022, 04, 21),
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 6,
        TaskName = "Develop floor plan for estimation",
        StartDate = new DateTime(2022, 04, 04),
        Duration = "7",
        Progress = 30,
        ParentId = 5,
        IsExpanded = true,
        Done = "No"
    },
    new TaskData() {
        TaskId = 7,
        TaskName = "List materials",
        StartDate = new DateTime(2022, 04, 04),
        Duration = "13",
        Progress = 40,
        ParentId = 5,
        IsExpanded = true,
        //6+2 - predecessor task + 2 days lags
        Done = "No", Predecessor = "6+2",
        IsMilestone = true
    },
    new TaskData() {
        TaskId = 8,
        TaskName = "Estimation approval",
        StartDate = new DateTime(2022, 04, 04),
        Duration = "25",
        Progress = 30,
        ParentId = 5,
        IsExpanded = true, Predecessor="7-2",
        Done = "No"
    },
     new TaskData() {
        TaskId = 9,
        TaskName = "Demand Analysis",
        StartDate = new DateTime(2022, 04, 02),
        EndDate = new DateTime(2022, 04, 21),
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 10,
        TaskName = "Customer Strength",
        StartDate = new DateTime(2022, 04, 04),
        Duration = "3",
        Progress = 30,
        ParentId = 9,
        IsExpanded = false,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 11,
        TaskName = "Competitor analysis",
        StartDate = new DateTime(2022, 04, 04),
        Duration = "13",
        Progress = 40,
        ParentId = 10,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 12,
        TaskName = "Product Strength Analysis",
        StartDate = new DateTime(2022, 04, 04),
        Duration = "25",
        Progress = 30,
        ParentId = 11,
        IsExpanded = true,
        Done = "No"
    },
    new TaskData() {
        TaskId = 13,
        TaskName = "Project estimation",
        StartDate = new DateTime(2022, 04, 02),
        EndDate = new DateTime(2022, 04, 21),
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 14,
        TaskName = "Develop floor plan for estimation",
        StartDate = new DateTime(2022, 04, 22),
        Duration = "25",
        Progress = 30,
        ParentId = 13,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 15,
        TaskName = "List materials",
        StartDate = new DateTime(2022, 04, 20),
        Duration = "12",
        Progress = 40,
        ParentId = 14,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 16,
        TaskName = "Estimation approval",
        StartDate = new DateTime(2022, 04, 19),
        Duration = "6",
        Progress = 30,
        ParentId = 15,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 17,
        TaskName = "Identifying raw mayerials",
        StartDate = new DateTime(2022, 04, 17),
        Duration = "6",
        ParentId=16,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 18,
        TaskName = "Define cost plan",
        StartDate = new DateTime(2022, 04, 15),
        Progress = 30,
        ParentId=17,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 19,
        TaskName = "Manufacturing cost",
        StartDate = new DateTime(2022, 04, 13),
        Duration = "7",
        Progress = 40,
        ParentId = 18,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 20,
        TaskName = "Selling cost",
        StartDate = new DateTime(2022, 04, 12),
        Duration = "6",
        Progress = 30,
        ParentId = 19,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 21,
        TaskName = "Developement of final design",
        StartDate = new DateTime(2022, 04, 09),
        Duration = "5",
        ParentId=20,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 22,
        TaskName = "Develope dimensions and design",
        StartDate = new DateTime(2022, 04, 08),
        Duration = "15",
        Progress = 30,
        ParentId=21,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 23,
        TaskName = "Develope designs to meet industry",
        StartDate = new DateTime(2022, 04, 05),
        Duration = "15",
        Progress = 40,
        ParentId = 22,
        IsExpanded = true,
        Done = "Yes"
    },
    new TaskData() {
        TaskId = 24,
        TaskName = "Include all the deatails",
        StartDate = new DateTime(2022, 04, 02),
        Duration = "25",
        Progress = 30,
        ParentId = 23,
        IsExpanded = true,
        Done = "No"
    },
};
        return Tasks;
    }

}